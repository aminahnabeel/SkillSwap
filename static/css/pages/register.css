/* register.css - Modern UI for Registration Page */

/* Auth Section Styling */
.auth-section {
  min-height: calc(100vh - 80px); /* Adjust based on your header height */
  display: flex;
  align-items: center;
  padding: 4rem 0;
  background: linear-gradient(135deg, rgba(99, 102, 241, 0.05) 0%, rgba(99, 102, 241, 0.1) 100%);
  position: relative;
  overflow: hidden;
}

.auth-section::before {
  content: "";
  position: absolute;
  width: 1000px;
  height: 1000px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(99, 102, 241, 0.1) 0%, transparent 70%);
  top: -400px;
  right: -400px;
  z-index: 0;
}

.auth-section::after {
  content: "";
  position: absolute;
  width: 800px;
  height: 800px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(16, 185, 129, 0.1) 0%, transparent 70%);
  bottom: -300px;
  left: -300px;
  z-index: 0;
}

.auth-container {
  max-width: 550px;
  margin: 0 auto;
  background-color: var(--white-color);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
  padding: 3rem;
  position: relative;
  z-index: 1;
  border: 1px solid rgba(229, 231, 235, 0.5);
  animation: fadeInUp 0.6s ease-out forwards;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.auth-container h1 {
  font-size: 2.25rem;
  margin-bottom: 1.75rem;
  color: var(--dark-color);
  text-align: center;
  position: relative;
  padding-bottom: 1rem;
}

.auth-container h1::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 4px;
  background: var(--primary-gradient);
  border-radius: 2px;
}

/* Alert Styling */
.alert {
  padding: 1rem 1.25rem;
  margin-bottom: 1.5rem;
  border-radius: var(--border-radius);
  display: flex;
  align-items: center;
  gap: 0.75rem;
  border-left: 4px solid;
  font-size: 0.95rem;
  animation: slideIn 0.3s ease-out forwards;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.alert::before {
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  font-size: 1.125rem;
}

.alert-success {
  background-color: rgba(16, 185, 129, 0.1);
  color: var(--success-color);
  border-left-color: var(--success-color);
}

.alert-success::before {
  content: "\f058"; /* check-circle */
}

.alert-danger, .alert-error {
  background-color: rgba(239, 68, 68, 0.1);
  color: var(--danger-color);
  border-left-color: var(--danger-color);
}

.alert-danger::before, .alert-error::before {
  content: "\f057"; /* times-circle */
}

/* Form Styling */
.auth-form {
  margin-top: 1.5rem;
}

.form-group {
  margin-bottom: 1.5rem;
  position: relative;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: var(--dark-color);
  font-size: 0.95rem;
  transition: all 0.3s ease;
}

.form-group input {
  width: 100%;
  padding: 0.875rem 1rem;
  border: 1px solid var(--light-gray);
  border-radius: var(--border-radius);
  font-size: 1rem;
  transition: all 0.3s ease;
  background-color: var(--lighter-gray);
  color: var(--dark-color);
}

.form-group input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.15);
  background-color: var(--white-color);
}

/* Floating label animation - optional enhancement */
.form-group.floating {
  position: relative;
}

.form-group.floating label {
  position: absolute;
  top: 0.875rem;
  left: 1rem;
  margin: 0;
  padding: 0 0.25rem;
  background-color: transparent;
  transition: all 0.2s ease;
  pointer-events: none;
}

.form-group.floating input:focus ~ label,
.form-group.floating input:not(:placeholder-shown) ~ label {
  top: -0.5rem;
  left: 0.75rem;
  font-size: 0.75rem;
  background-color: var(--white-color);
  padding: 0 0.25rem;
}

/* Button Styling */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.875rem 1.5rem;
  font-weight: 600;
  text-align: center;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.1);
  transition: width 0.3s ease;
  z-index: -1;
}

.btn:hover::before {
  width: 100%;
}

.btn-primary {
  background: var(--primary-gradient);
  color: var(--white-color);
  box-shadow: 0 4px 14px 0 rgba(99, 102, 241, 0.4);
}

.btn-primary:hover {
  box-shadow: 0 6px 20px rgba(99, 102, 241, 0.6);
  transform: translateY(-2px);
}

.btn-block {
  display: block;
  width: 100%;
  margin-top: 2rem;
  padding: 1rem;
  font-size: 1.125rem;
}

/* Auth Links Styling */
.auth-links {
  margin-top: 2rem;
  text-align: center;
  color: var(--gray-color);
  font-size: 0.95rem;
}

.auth-links a {
  color: var(--primary-color);
  font-weight: 600;
  text-decoration: none;
  position: relative;
  transition: color 0.3s ease;
}

.auth-links a::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 1px;
  background-color: var(--primary-color);
  bottom: -2px;
  left: 0;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

.auth-links a:hover {
  color: var(--primary-dark);
}

.auth-links a:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

/* Password Strength Indicator - Optional Enhancement */
.password-strength {
  height: 4px;
  margin-top: 0.5rem;
  border-radius: 2px;
  background-color: var(--light-gray);
  overflow: hidden;
}

.password-strength-bar {
  height: 100%;
  width: 0;
  transition: width 0.3s ease, background-color 0.3s ease;
}

.password-strength-bar.weak {
  width: 33.33%;
  background-color: var(--danger-color);
}

.password-strength-bar.medium {
  width: 66.66%;
  background-color: var(--warning-color);
}

.password-strength-bar.strong {
  width: 100%;
  background-color: var(--success-color);
}

.password-feedback {
  font-size: 0.75rem;
  margin-top: 0.25rem;
  color: var(--gray-color);
}

/* Form Layout - Two Columns for First Name and Last Name */
.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

/* Responsive Styles */
@media (max-width: 768px) {
  .auth-container {
    padding: 2rem;
    margin: 0 1rem;
  }
  
  .auth-container h1 {
    font-size: 2rem;
  }
  
  .form-row {
    grid-template-columns: 1fr;
    gap: 0;
  }
}

@media (max-width: 576px) {
  .auth-section {
    padding: 2rem 0;
  }
  
  .auth-container {
    padding: 1.5rem;
  }
  
  .auth-container h1 {
    font-size: 1.75rem;
  }
  
  .btn-block {
    padding: 0.875rem;
    font-size: 1rem;
  }
}

/* Animation for Form Fields */
.form-group {
  opacity: 0;
  transform: translateY(10px);
  animation: fadeInField 0.5s ease forwards;
}

.form-group:nth-child(1) { animation-delay: 0.1s; }
.form-group:nth-child(2) { animation-delay: 0.2s; }
.form-group:nth-child(3) { animation-delay: 0.3s; }
.form-group:nth-child(4) { animation-delay: 0.4s; }
.form-group:nth-child(5) { animation-delay: 0.5s; }

@keyframes fadeInField {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Optional: Show/Hide Password Toggle */
.password-toggle {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: var(--gray-color);
  cursor: pointer;
  font-size: 1rem;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.password-toggle:hover {
  color: var(--primary-color);
}

/* To use the password toggle, add this JavaScript:
document.addEventListener('DOMContentLoaded', function() {
  const passwordField = document.getElementById('password');
  const toggleButton = document.createElement('button');
  toggleButton.type = 'button';
  toggleButton.className = 'password-toggle';
  toggleButton.innerHTML = '<i class="fas fa-eye"></i>';
  toggleButton.addEventListener('click', function() {
    if (passwordField.type === 'password') {
      passwordField.type = 'text';
      toggleButton.innerHTML = '<i class="fas fa-eye-slash"></i>';
    } else {
      passwordField.type = 'password';
      toggleButton.innerHTML = '<i class="fas fa-eye"></i>';
    }
  });
  passwordField.parentNode.style.position = 'relative';
  passwordField.parentNode.appendChild(toggleButton);
});
*/